{"version":3,"file":"rete-angular-render-plugin.umd.js","sources":["../../src/node.service.ts","../../src/node/node.component.ts","../../src/kebab.pipe.ts","../../src/socket/socket.component.ts","../../src/control.directive.ts","../../src/socket.directive.ts","../../src/custom.component.ts","../../src/module.ts","../../src/index.ts","../../src/rete-angular-render-plugin.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BindControl, BindSocket } from './types';\n\n@Injectable()\nexport class NodeService {\n  public bindSocket: BindSocket;\n  public bindControl: BindControl;\n  \n  setBindings(bindSocket, bindControl) {\n    this.bindSocket = bindSocket;\n    this.bindControl = bindControl;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NodeEditor, Node, Input as ReteInput, Output as ReteOutput, Control as ReteControl } from 'rete';\nimport { NodeService } from '../node.service';\n\n@Component({\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.sass'],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NodeComponent {\n  @Input() editor!: NodeEditor;\n  @Input() node!: Node;\n  @Input() bindSocket!: Function;\n  @Input() bindControl!: Function;\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.service.setBindings(this.bindSocket, this.bindControl);\n    this.node.update = () => this.cdr.detectChanges();\n  }\n\n  get inputs() {\n    return Array.from(this.node.inputs.values());\n  }\n\n  get outputs() {\n    return Array.from(this.node.outputs.values());\n  }\n\n  get controls() {\n    return Array.from(this.node.controls.values());\n  }\n\n  selected() {\n    return this.editor.selected.contains(this.node) ? 'selected' : '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype ClassAttr = string | string[];\n\n@Pipe({name: 'kebab'})\nexport class KebabPipe implements PipeTransform {\n\n  replace(s: string) {\n    return s.toLowerCase().replace(/ /g, '-');\n  }\n\n  transform(value: ClassAttr): ClassAttr {\n    return Array.isArray(value) ? value.map(s => this.replace(s)) : this.replace(value);\n  }\n}","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Socket, IO, Input as ReteInput } from 'rete';\nimport { SocketType } from '../types';\n\n@Component({\n  selector: 'rete-socket',\n  template: `<div *ngIf=\"socket\" class=\"socket\" [ngClass]=\"[type, socket.name]\" [title]=\"socket.name\"></div>`,\n  styleUrls: ['./socket.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SocketComponent {\n  @Input() socket!: Socket;\n  @Input() io!: IO;\n\n  get type(): SocketType {\n    return this.io instanceof ReteInput ? 'input' : 'output';\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { Control } from 'rete';\nimport { NodeService } from './node.service';\n\n@Directive({\n  selector: '[rete-control]'\n})\nexport class ControlDirective implements OnInit {\n  @Input('rete-control') control!: Control;\n\n  constructor(private el: ElementRef, private service: NodeService) {}\n\n  ngOnInit() {\n    this.service.bindControl(this.el.nativeElement, this.control);\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { IO, Input as ReteInput } from 'rete';\nimport { NodeService } from './node.service';\nimport { SocketType } from './types';\n\n@Directive({\n  selector: '[rete-socket]'\n})\nexport class SocketDirective implements OnInit {\n    @Input() io!: IO;\n  \n    constructor(private el: ElementRef, private service: NodeService) {}\n  \n    get type(): SocketType {\n      return this.io instanceof ReteInput ? 'input' : 'output';\n    }\n  \n    ngOnInit() {\n      this.service.bindSocket(this.el.nativeElement, this.type, this.io);\n    }\n}\n","import { Component, Input, OnInit, Injector, ComponentFactoryResolver, ViewContainerRef, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { Props } from './types';\n\n@Component({\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponent implements OnInit {\n  @Input() component!: Type<Component>;\n  @Input() props!: Props;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private injector: Injector,\n    private factoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const factory = this.factoryResolver.resolveComponentFactory(this.component);\n    const componentRef = factory.create(this.injector);\n    const { props } = this;\n\n    for(let key in props) {\n      Object.defineProperty(componentRef.instance, key, {\n        get() { return props[key]; },\n        set(val) { props[key] = val; }\n      })\n    }\n\n    this.vcr.insert(componentRef.hostView);\n  }\n\n  ngOnDestroy() {\n    this.vcr.detach(0);\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { createCustomElement } from '@angular/elements';\n\nimport { KebabPipe } from './kebab.pipe';\nimport { NodeComponent } from './node/node.component';\nimport { SocketComponent } from './socket/socket.component';\nimport { ControlDirective } from './control.directive';\nimport { SocketDirective } from './socket.directive';\nimport { CustomComponent } from './custom.component';\n\n@NgModule({\n  declarations: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KebabPipe,\n    ControlDirective\n  ],\n  exports: [\n    NodeComponent,\n    CustomComponent,\n    SocketComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe\n  ],\n  entryComponents: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent\n  ]\n})\nexport class ReteModule {\n  constructor(injector: Injector) { // StaticInjectorError due to 'npm link'\n    const CustomElement = createCustomElement(CustomComponent, { injector });\n    if (!customElements.get('rete-element')) customElements.define('rete-element', CustomElement);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NodeEditor } from 'rete';\nimport { AngularControl, ElementProps, AngularComponentData } from './types';\nimport { NodeComponent } from './node/node.component';\n\nfunction install(editor: NodeEditor, params : { component?: Type<any> } = {}) {\n    editor.on('rendernode', ({ el, node, component, bindControl, bindSocket }) => {\n        const ngComponent = component as unknown as AngularComponentData;\n\n        if (ngComponent.render && ngComponent.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngComponent.component || params.component || NodeComponent;\n        props.props = Object.assign({}, ngComponent.props || {}, {\n            node,\n            editor,\n            bindControl,\n            bindSocket\n        });\n\n        el.appendChild(element);\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        const ngControl = control as unknown as AngularControl;\n\n        if (ngControl.render && ngControl.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngControl.component;\n        props.props = ngControl.props;\n\n        el.appendChild(element);\n    });\n    editor.on(['connectioncreated', 'connectionremoved'], connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n    editor.on('nodeselected', () => {\n        editor.nodes.forEach(n => n.update());\n    });\n}\n\nexport const AngularRenderPlugin = {\n    name: 'angular-render',\n    install\n};\nexport { ReteModule } from './module';\nexport * from './types';\nexport { NodeService } from './node.service';\nexport { NodeComponent } from './node/node.component';\nexport { SocketComponent } from './socket/socket.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ControlDirective as ɵb} from './control.directive';\nexport {CustomComponent as ɵa} from './custom.component';\nexport {KebabPipe as ɵd} from './kebab.pipe';\nexport {SocketDirective as ɵc} from './socket.directive';"],"names":["Injectable","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Pipe","ReteInput","Directive","ElementRef","ViewContainerRef","Injector","ComponentFactoryResolver","createCustomElement","NgModule","CommonModule"],"mappings":"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"}